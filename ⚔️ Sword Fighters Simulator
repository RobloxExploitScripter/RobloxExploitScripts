local closest = {{HumanoidRootPart = {Position = Vector3.new(9e9,9e9,9e9)}},9e9}
local remote = game:GetService("ReplicatedStorage").Packages.Knit.Services.ClickService.RF.Click
local plr = game.Players.LocalPlayer
local dist = 0

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({IntroText = "Cips 3 am",Name = "Project PZ", HidePremium = false, SaveConfig = true, ConfigFolder = "Cips#9611 Baba Pro"})

_G.TPwait = 1
_G.TPaura = false
_G.Range = 15
_G.KillAura = false
_G.power = false
_G.Range2 = 10
_G.AutoCollect = false
_G.AutoQuest = false
_G.SelectArea = "Area 1"
_G.SelectEgg = "Egg 1"
_G.AutoAscend = false
_G.EquipBestSword = false
_G.EquipBestPets = false
_G.AutoCraftS = false
_G.AutoCraftP = false
_G.Chests = false
_G.HatchEgg = false

function HatchEgg3()
    while _G.HatchEgg3 == true do
local ohTable1 = {
	["eggName"] = _G.SelectEgg,
	["auto"] = false,
	["amount"] = 3
}

game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.BuyEgg:InvokeServer(ohTable1)
wait()
end
end
function HatchEgg()
    while _G.HatchEgg == true do
local ohTable1 = {
	["eggName"] = _G.SelectEgg,
	["auto"] = false,
	["amount"] = 1
}

game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.BuyEgg:InvokeServer(ohTable1)
wait()
end
end
function Chests()
    while _G.Chests == true do
local ohString1 = "Chest 1"

game:GetService("ReplicatedStorage").Packages.Knit.Services.ChestService.RF.ClaimChest:InvokeServer(ohString1)
local ohString1 = "Chest 2"

game:GetService("ReplicatedStorage").Packages.Knit.Services.ChestService.RF.ClaimChest:InvokeServer(ohString1)
wait(3)
end
end
function EquipBestSword()
    while _G.EquipBestSword == true do
game:GetService("ReplicatedStorage").Packages.Knit.Services.WeaponInvService.RF.EquipBest:InvokeServer()
wait(1)
end
end
function EquipBestPets()
    while _G.EquipBestPets == true do
game:GetService("ReplicatedStorage").Packages.Knit.Services.PetInvService.RF.EquipBest:InvokeServer()
wait(1)
end
end
function AntiAfk()
    while _G.AntiAfk == true do
		while _G.AntiAfk == true do
			Players = game:GetService("Players")
			local GC = getconnections or get_signal_cons
			if GC then
				for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
					if v["Disable"] then
						v["Disable"](v)
					elseif v["Disconnect"] then
						v["Disconnect"](v)
					end
				end
			else
				Players.LocalPlayer.Idled:Connect(function()
					local VirtualUser = game:GetService("VirtualUser")
					VirtualUser:CaptureController()
					VirtualUser:ClickButton2(Vector2.new())
				end)
			end
		wait(10)
end
end
end

function mag(p1,p2,dist)
    return math.abs(p1.Z-p2.Z)+math.abs(p1.X-p2.X) < dist
end
function KillAura()
    while _G.KillAura == true do
        for i,v in pairs(game:GetService("Workspace").Live.NPCs.Client:GetChildren()) do 
            if mag(plr.Character.HumanoidRootPart.Position,v.HumanoidRootPart.Position,_G.Range) then
                remote:InvokeServer(v.Name)
                end
            end
      wait()
   end
end
function AutoCollect()
    while _G.AutoCollect == true do
    for i,v in pairs(game:GetService("Workspace").Live.Pickups:GetChildren()) do 
        v.CFrame = plr.Character.HumanoidRootPart.CFrame
    end
wait()
end
end
function AutoQuest()
    while _G.AutoQuest == true do
local ohString1 = _G.SelectArea

game:GetService("ReplicatedStorage").Packages.Knit.Services.QuestService.RF.ActionQuest:InvokeServer(ohString1)
wait()
end
end
function AutoAscend()
    while _G.AutoAscend == true do
game:GetService("ReplicatedStorage").Packages.Knit.Services.AscendService.RF.Ascend:InvokeServer()
wait(10)
end
end
function power()
    while _G.power == true do
        remote:InvokeServer()
        remote:InvokeServer()
        remote:InvokeServer()
      wait()
   end
end
function TPaura()
    while _G.TPaura == true do
   for i, v in pairs(game:GetService("Workspace").Live.NPCs.Client:GetDescendants()) do
    if v.Name == "HumanoidRootPart" then
     plr.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0, 2, 4)
end
end
wait(_G.TPwait)
      wait()
   end
end
function AutoCraftS()
    while _G.AutoCraftS == true do
    for i, v in pairs(plr.PlayerGui.WeaponInv.Background.ImageFrame.Window.WeaponHolder.WeaponScrolling:GetDescendants()) do
    if v:IsA("Frame") then
    game:GetService("ReplicatedStorage").Packages.Knit.Services.ForgeService.RF.Forge:InvokeServer(v.Name)
    game:GetService("ReplicatedStorage").Packages.Knit.Services.ForgeService.RF.Forge:InvokeServer(v.Name)
end
end
wait()
end
end 
local FarmTab = Window:MakeTab({
	Name = "Farm",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local EggTab = Window:MakeTab({
	Name = "Egg+Sword",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local PlayerTab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local CrTab = Window:MakeTab({
	Name = "Credits",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
CrTab:AddParagraph("Script made by!","Cips#9611")
CrTab:AddParagraph("Our discord server:","https://discord.gg/zzxF82DHpX")

FarmTab:AddToggle({
	Name = "Anti Afk",
	Default = false,
	Callback = function(Value)
_G.AntiAfk = Value 
AntiAfk() 
    end
})
FarmTab:AddButton({
	Name = "Auto Clicker",
	Callback = function()
game:GetService("ReplicatedStorage").Packages.Knit.Services.SettingsService.RF.ToggleAuto:InvokeServer()
  	end    
})
FarmTab:AddToggle({
	Name = "Auto Collect Coins",
	Default = false,
	Callback = function(Value)
_G.AutoCollect = Value 
AutoCollect() 
    end
})
FarmTab:AddDropdown({
	Name = "Select Area Quest",
	Default = "Area 1",
	Options = {"Area 1", "Area 2", "Area 3", "Area 4", "Area 5", "Area 6", "Area 7", "Area 8", "Area 9", "Area 10"},
	Callback = function(Value)
    _G.SelectArea = Value
	end    
})
FarmTab:AddToggle({
	Name = "Auto Quest",
	Default = false,
	Callback = function(Value)
_G.AutoQuest = Value 
AutoQuest() 
    end
})
FarmTab:AddToggle({
	Name = "Auto Ascend",
	Default = false,
	Callback = function(Value)
_G.AutoAscend = Value 
AutoAscend() 
    end
})
FarmTab:AddToggle({
	Name = "Kill Aura",
	Default = false,
	Callback = function(Value)
_G.KillAura = Value 
KillAura() 
    end
})
FarmTab:AddSlider({
	Name = "Kill Aura Range",
	Min = 0,
	Max = 52,
	Default = 20,
	Color = Color3.fromRGB(255, 188, 181),
	Increment = 1,
	Callback = function(Value)
        _G.Range = Value
	end    
})
FarmTab:AddToggle({
	Name = "Auto Claim Chests",
	Default = false,
	Callback = function(Value)
_G.Chests = Value 
Chests() 
    end
})
EggTab:AddToggle({
	Name = "Auto Equip Best Sword",
	Default = false,
	Callback = function(Value)
_G.EquipBestSword = Value 
EquipBestSword() 
    end
})
FarmTab:AddToggle({
	Name = "TP Aura",
	Default = false,
	Callback = function(Value)
_G.TPaura = Value 
TPaura() 
    end
})
FarmTab:AddTextbox({
	Name = "TP Aura Wait",
	Default = "1",
	TextDisappear = false,
	Callback = function(Value)
        _G.TPwait = Value
	end	  
})
EggTab:AddToggle({
	Name = "Auto Craft Swords",
	Default = false,
	Callback = function(Value)
_G.AutoCraftS = Value 
AutoCraftS() 
    end
})
EggTab:AddToggle({
	Name = "Auto Equip Best Pets",
	Default = false,
	Callback = function(Value)
_G.EquipBestPets = Value 
EquipBestPets() 
    end
})
EggTab:AddDropdown({
	Name = "Select Egg",
	Default = "Egg 1",
	Options = {"Egg 1", "Egg 2", "Egg 3", "Egg 4", "Egg 5", "Egg 6", "Egg 7", "Egg 8", "Egg 9", "Egg 10"},
	Callback = function(Value)
    _G.SelectEgg = Value
	end    
})
EggTab:AddToggle({
	Name = "Hatch Egg",
	Default = false,
	Callback = function(Value)
_G.HatchEgg = Value 
HatchEgg() 
    end
})
EggTab:AddToggle({
	Name = "Hatch Egg Triple (need gamepass)",
	Default = false,
	Callback = function(Value)
_G.HatchEgg3 = Value 
HatchEgg3() 
    end
})
OrionLib:Init()
